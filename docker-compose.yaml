volumes:
  postgres:

services:

  # This container runs the database.
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgres
    ports:
      - target: 5432
        published: ${PUBLISH_PORT_POSTGRES}
        protocol: tcp
        mode: host
    user: postgres
    healthcheck:
      test: ["CMD", "pg_isready"]
      start_period: 5s
      # start_interval: 10s
      interval: 10s
      timeout: 3s
      retries: 3

  # This container installs node modules from the package-lock.json file.
  installer: &node
    image: node:20
    working_dir: /workspace

    # We would rather ignore scripts, but this repo depends on bcrypt, which
    # requires a build step.
    # command: npm ci --ignore-scripts
    command: scripts/install.sh

    environment:
      NODE_ENV: development
    volumes:
      - type: bind
        source: .
        target: /workspace
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/package-lock.json"]
      start_period: 5s
      # start_interval: 10s
      interval: 10s
      timeout: 3s
      retries: 6

  # This container watches for changes and builds the application.
  # builder:
  #   <<: *node
  #   depends_on:
  #     installer:
  #       condition: service_healthy
  #       restart: false
  #   command: npm run build:development
  #   healthcheck:
  #     test: ["CMD", "test", "-f", "dist/server.js"]
  #     start_period: 5s
  #     # start_interval: 10s
  #     interval: 10s
  #     timeout: 3s
  #     retries: 6

  # This container runs the server.
  server:
    <<: *node
    working_dir: /workspace/packages/example
    depends_on:
      # builder:
      #   condition: service_healthy
      #   restart: false
      postgres:
        condition: service_healthy
        restart: false
    command: npm run start:development
    environment:
      NODE_ENV: development
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
    ports:
      - target: 80
        published: ${PUBLISH_PORT_DASHBOARD}
        protocol: tcp
        mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      start_period: 5s
      # start_interval: 10s
      interval: 10s
      timeout: 3s
      retries: 6
