name: Deployment

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:9.6.17
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - name: GenerateVersion
        id: GenerateVersion
        run: |
          export BASE_VERSION="$GITHUB_REF"
          echo "Base version is $BASE_VERSION"
          [ ! -z "$BASE_VERSION" ]
          export VERSION=`echo "$BASE_VERSION" | grep -Po '[0-9].*'`
          echo "Version is $VERSION"
          [ ! -z "$VERSION" ]
          echo "::set-output name=version::$VERSION"
      - uses: actions/checkout@v2
      - name: Use Node 12
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "12.x"
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies and Test
        run: yarn install
      - name: Build
        run: yarn run build
      - name: Lint
        run: yarn run lint
      - name: Test
        run: yarn run test
        env:
          PORT: 12000
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: 5432
          PGSSL: false
      - name: Version
        env:
          VERSION: ${{ steps.GenerateVersion.outputs.version }}
        run: |
          yarn run lerna version --no-git-tag-version -y "$VERSION"
          yarn format
      - name: Repush
        env:
          VERSION: ${{ steps.GenerateVersion.outputs.version }}
        run: |
          git config --global user.name 'Github Actions'
          git config --global user.email 'githubactions'
          git commit -am "v$VERSION"
          git tag -f -a "v$VERSION" -m "v$VERSION"
          git branch -va
          git push -f --tags
          git push origin HEAD:main
      - name: Publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          VERSION: ${{ steps.GenerateVersion.outputs.version }}
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
          scripts/run-in-packages.sh yarn publish --access public --no-git-tag-version --new-version $VERSION
